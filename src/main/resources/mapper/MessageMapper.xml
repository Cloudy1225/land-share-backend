<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tencent.wxcloudrun.dao.C2C_Chat_Daos.MessageDao">

    <!-- resultMap最终还是要将结果映射到pojo上，type就是指定映射到哪一个pojo -->
    <!-- id	当前命名空间中的一个唯一标识，用于标识一个结果映射。 -->
    <resultMap id="MessagePO" type="com.tencent.wxcloudrun.model.po.C2C_Chat_POs.MessagePO">
        <!-- 定义主键 ,非常重要。如果是多个字段,则定义多个id -->
        <!-- property：主键在pojo中的属性名 -->
        <!-- column：主键在数据库中的列名 -->
        <id property="messageID" column="messageID" />

        <!-- 定义普通属性 -->
        <result property="conversationID" column="conversationID" />
        <result property="from" column="from" />
        <result property="to" column="to" />
        <result property="type" column="type" />
        <result property="payload" column="payload" />
        <result property="time" column="time" />
        <result property="isRevoked" column="isRevoked" />
        <result property="isPeerRead" column="isPeerRead" />
        <result property="isFromDeleted" column="isFromDeleted" />
        <result property="isToDeleted" column="isToDeleted" />
    </resultMap>

    <insert id="insertMessage" parameterType="com.tencent.wxcloudrun.model.po.C2C_Chat_POs.MessagePO">
        insert into Message(messageID, conversationID, `from`, `to`, type, payload, time)
        values (#{messageID}, #{conversationID}, #{from}, #{to}, #{type}, #{payload}, #{time})
    </insert>

    <select id="selectById" parameterType="java.lang.String" resultMap="MessagePO">
        select * from Message where messageID=#{messageID}
    </select>

    <select id="selectByConversationID" resultMap="MessagePO">
        select * from Message where conversationID=#{conversationID} and time &lt; #{time}
        order by time desc limit #{count}
    </select>

    <update id="setIsPeerReadTrue">
        update Message set isPeerRead=true where conversationID=#{conversationID} and `to`=#{openid}
    </update>

    <update id="setIsRevokedTrue" parameterType="java.lang.String">
        update Message set isRevoked=true where messageID=#{messageID}
    </update>

    <update id="setIsDeletedTrue">
        update Message set isFromDeleted=true where messageID=#{messageID} and `from`=#{openid};
        update Message set isToDeleted=true where messageID=#{messageID} and `to`=#{openid};
    </update>

</mapper>